/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TechnicalMessages } from './TechnicalMessages';
import {
    TechnicalMessagesFromJSON,
    TechnicalMessagesFromJSONTyped,
    TechnicalMessagesToJSON,
} from './TechnicalMessages';
import type { Warnings } from './Warnings';
import {
    WarningsFromJSON,
    WarningsFromJSONTyped,
    WarningsToJSON,
} from './Warnings';

/**
 * 
 * @export
 * @interface LocationList
 */
export interface LocationList {
    /**
     * 
     * @type {TechnicalMessages}
     * @memberof LocationList
     */
    technicalMessages?: TechnicalMessages;
    /**
     * 
     * @type {Warnings}
     * @memberof LocationList
     */
    warnings?: Warnings;
    /**
     * 
     * @type {string}
     * @memberof LocationList
     */
    serverVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationList
     */
    dialectVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationList
     */
    version?: string;
    /**
     * 
     * @type {Date}
     * @memberof LocationList
     */
    planRtTs?: Date;
    /**
     * 
     * @type {string}
     * @memberof LocationList
     */
    errorCode?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationList
     */
    errorText?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationList
     */
    requestId?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof LocationList
     */
    stopLocationOrCoordLocation?: Array<object>;
    /**
     * 
     * @type {Array<string>}
     * @memberof LocationList
     */
    scrollCtx?: Array<string>;
}

/**
 * Check if a given object implements the LocationList interface.
 */
export function instanceOfLocationList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LocationListFromJSON(json: any): LocationList {
    return LocationListFromJSONTyped(json, false);
}

export function LocationListFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'technicalMessages': !exists(json, 'TechnicalMessages') ? undefined : TechnicalMessagesFromJSON(json['TechnicalMessages']),
        'warnings': !exists(json, 'Warnings') ? undefined : WarningsFromJSON(json['Warnings']),
        'serverVersion': !exists(json, 'serverVersion') ? undefined : json['serverVersion'],
        'dialectVersion': !exists(json, 'dialectVersion') ? undefined : json['dialectVersion'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'planRtTs': !exists(json, 'planRtTs') ? undefined : (new Date(json['planRtTs'])),
        'errorCode': !exists(json, 'errorCode') ? undefined : json['errorCode'],
        'errorText': !exists(json, 'errorText') ? undefined : json['errorText'],
        'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],
        'stopLocationOrCoordLocation': !exists(json, 'stopLocationOrCoordLocation') ? undefined : json['stopLocationOrCoordLocation'],
        'scrollCtx': !exists(json, 'scrollCtx') ? undefined : json['scrollCtx'],
    };
}

export function LocationListToJSON(value?: LocationList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'TechnicalMessages': TechnicalMessagesToJSON(value.technicalMessages),
        'Warnings': WarningsToJSON(value.warnings),
        'serverVersion': value.serverVersion,
        'dialectVersion': value.dialectVersion,
        'version': value.version,
        'planRtTs': value.planRtTs === undefined ? undefined : (value.planRtTs.toISOString()),
        'errorCode': value.errorCode,
        'errorText': value.errorText,
        'requestId': value.requestId,
        'stopLocationOrCoordLocation': value.stopLocationOrCoordLocation,
        'scrollCtx': value.scrollCtx,
    };
}

