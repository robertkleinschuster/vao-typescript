/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Coordinate } from './Coordinate';
import {
    CoordinateFromJSON,
    CoordinateFromJSONTyped,
    CoordinateToJSON,
} from './Coordinate';
import type { Polyline } from './Polyline';
import {
    PolylineFromJSON,
    PolylineFromJSONTyped,
    PolylineToJSON,
} from './Polyline';
import type { PolylineGroup } from './PolylineGroup';
import {
    PolylineGroupFromJSON,
    PolylineGroupFromJSONTyped,
    PolylineGroupToJSON,
} from './PolylineGroup';
import type { StopType } from './StopType';
import {
    StopTypeFromJSON,
    StopTypeFromJSONTyped,
    StopTypeToJSON,
} from './StopType';

/**
 * 
 * @export
 * @interface MessageEdgeType
 */
export interface MessageEdgeType {
    /**
     * 
     * @type {StopType}
     * @memberof MessageEdgeType
     */
    sstop?: StopType;
    /**
     * 
     * @type {StopType}
     * @memberof MessageEdgeType
     */
    estop?: StopType;
    /**
     * 
     * @type {StopType}
     * @memberof MessageEdgeType
     */
    sStop?: StopType;
    /**
     * 
     * @type {StopType}
     * @memberof MessageEdgeType
     */
    eStop?: StopType;
    /**
     * 
     * @type {Array<Polyline>}
     * @memberof MessageEdgeType
     */
    readonly polyline?: Array<Polyline>;
    /**
     * 
     * @type {PolylineGroup}
     * @memberof MessageEdgeType
     */
    polylineGroup?: PolylineGroup;
    /**
     * 
     * @type {Coordinate}
     * @memberof MessageEdgeType
     */
    iconCoordinate?: Coordinate;
    /**
     * 
     * @type {Array<number>}
     * @memberof MessageEdgeType
     */
    readonly messageRef?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof MessageEdgeType
     */
    direction?: number;
}

/**
 * Check if a given object implements the MessageEdgeType interface.
 */
export function instanceOfMessageEdgeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MessageEdgeTypeFromJSON(json: any): MessageEdgeType {
    return MessageEdgeTypeFromJSONTyped(json, false);
}

export function MessageEdgeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageEdgeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sstop': !exists(json, 'sstop') ? undefined : StopTypeFromJSON(json['sstop']),
        'estop': !exists(json, 'estop') ? undefined : StopTypeFromJSON(json['estop']),
        'sStop': !exists(json, 'sStop') ? undefined : StopTypeFromJSON(json['sStop']),
        'eStop': !exists(json, 'eStop') ? undefined : StopTypeFromJSON(json['eStop']),
        'polyline': !exists(json, 'polyline') ? undefined : ((json['polyline'] as Array<any>).map(PolylineFromJSON)),
        'polylineGroup': !exists(json, 'polylineGroup') ? undefined : PolylineGroupFromJSON(json['polylineGroup']),
        'iconCoordinate': !exists(json, 'iconCoordinate') ? undefined : CoordinateFromJSON(json['iconCoordinate']),
        'messageRef': !exists(json, 'messageRef') ? undefined : json['messageRef'],
        'direction': !exists(json, 'direction') ? undefined : json['direction'],
    };
}

export function MessageEdgeTypeToJSON(value?: MessageEdgeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sstop': StopTypeToJSON(value.sstop),
        'estop': StopTypeToJSON(value.estop),
        'sStop': StopTypeToJSON(value.sStop),
        'eStop': StopTypeToJSON(value.eStop),
        'polylineGroup': PolylineGroupToJSON(value.polylineGroup),
        'iconCoordinate': CoordinateToJSON(value.iconCoordinate),
        'direction': value.direction,
    };
}

