/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GisEdgeType } from './GisEdgeType';
import {
    GisEdgeTypeFromJSON,
    GisEdgeTypeFromJSONTyped,
    GisEdgeTypeToJSON,
} from './GisEdgeType';
import type { Messages } from './Messages';
import {
    MessagesFromJSON,
    MessagesFromJSONTyped,
    MessagesToJSON,
} from './Messages';
import type { Notes } from './Notes';
import {
    NotesFromJSON,
    NotesFromJSONTyped,
    NotesToJSON,
} from './Notes';
import type { TrafficMessageType } from './TrafficMessageType';
import {
    TrafficMessageTypeFromJSON,
    TrafficMessageTypeFromJSONTyped,
    TrafficMessageTypeToJSON,
} from './TrafficMessageType';

/**
 * 
 * @export
 * @interface GisRouteSegment
 */
export interface GisRouteSegment {
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    durS?: string;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    rtype?: GisRouteSegmentRtypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    rnum?: string;
    /**
     * 
     * @type {Notes}
     * @memberof GisRouteSegment
     */
    notes?: Notes;
    /**
     * 
     * @type {Array<GisEdgeType>}
     * @memberof GisRouteSegment
     */
    readonly edge?: Array<GisEdgeType>;
    /**
     * 
     * @type {Array<TrafficMessageType>}
     * @memberof GisRouteSegment
     */
    readonly trafficMessage?: Array<TrafficMessageType>;
    /**
     * 
     * @type {Messages}
     * @memberof GisRouteSegment
     */
    messages?: Messages;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    rType?: GisRouteSegmentRTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    rNum?: string;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    man?: GisRouteSegmentManEnum;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    manTx?: string;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    manTargetName?: string;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    dirTx?: string;
    /**
     * 
     * @type {string}
     * @memberof GisRouteSegment
     */
    ori?: GisRouteSegmentOriEnum;
    /**
     * 
     * @type {number}
     * @memberof GisRouteSegment
     */
    polyS?: number;
    /**
     * 
     * @type {number}
     * @memberof GisRouteSegment
     */
    polyE?: number;
    /**
     * 
     * @type {number}
     * @memberof GisRouteSegment
     */
    dist?: number;
}


/**
 * @export
 */
export const GisRouteSegmentRtypeEnum = {
    U: 'U',
    M: 'M',
    H: 'H',
    T: 'T',
    T4L: 'T4L',
    T2L: 'T2L',
    Tr: 'TR',
    Nt: 'NT',
    Ct: 'CT',
    R: 'R',
    B: 'B',
    Cw: 'CW',
    C: 'C',
    W: 'W',
    F: 'F'
} as const;
export type GisRouteSegmentRtypeEnum = typeof GisRouteSegmentRtypeEnum[keyof typeof GisRouteSegmentRtypeEnum];

/**
 * @export
 */
export const GisRouteSegmentRTypeEnum = {
    U: 'U',
    M: 'M',
    H: 'H',
    T: 'T',
    T4L: 'T4L',
    T2L: 'T2L',
    Tr: 'TR',
    Nt: 'NT',
    Ct: 'CT',
    R: 'R',
    B: 'B',
    Cw: 'CW',
    C: 'C',
    W: 'W',
    F: 'F'
} as const;
export type GisRouteSegmentRTypeEnum = typeof GisRouteSegmentRTypeEnum[keyof typeof GisRouteSegmentRTypeEnum];

/**
 * @export
 */
export const GisRouteSegmentManEnum = {
    No: 'NO',
    Fr: 'FR',
    To: 'TO',
    On: 'ON',
    Le: 'LE',
    Ri: 'RI',
    Kl: 'KL',
    Kr: 'KR',
    Hl: 'HL',
    Hr: 'HR',
    Khl: 'KHL',
    Khr: 'KHR',
    Sl: 'SL',
    Sr: 'SR',
    Ksl: 'KSL',
    Ksr: 'KSR',
    St: 'ST',
    Ut: 'UT',
    En: 'EN',
    Lv: 'LV',
    Er: 'ER',
    Sir: 'SIR',
    Lr: 'LR',
    Ef: 'EF',
    Lf: 'LF',
    Ch: 'CH',
    Cif: 'CIF',
    Cof: 'COF',
    El: 'EL',
    Eld: 'ELD',
    Elu: 'ELU',
    Es: 'ES',
    Esd: 'ESD',
    Esu: 'ESU',
    Sta: 'STA',
    Std: 'STD',
    Stu: 'STU'
} as const;
export type GisRouteSegmentManEnum = typeof GisRouteSegmentManEnum[keyof typeof GisRouteSegmentManEnum];

/**
 * @export
 */
export const GisRouteSegmentOriEnum = {
    U: 'U',
    N: 'N',
    S: 'S',
    E: 'E',
    W: 'W',
    Ne: 'NE',
    Se: 'SE',
    Nw: 'NW',
    Sw: 'SW'
} as const;
export type GisRouteSegmentOriEnum = typeof GisRouteSegmentOriEnum[keyof typeof GisRouteSegmentOriEnum];


/**
 * Check if a given object implements the GisRouteSegment interface.
 */
export function instanceOfGisRouteSegment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GisRouteSegmentFromJSON(json: any): GisRouteSegment {
    return GisRouteSegmentFromJSONTyped(json, false);
}

export function GisRouteSegmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): GisRouteSegment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'durS': !exists(json, 'durS') ? undefined : json['durS'],
        'rtype': !exists(json, 'rtype') ? undefined : json['rtype'],
        'rnum': !exists(json, 'rnum') ? undefined : json['rnum'],
        'notes': !exists(json, 'Notes') ? undefined : NotesFromJSON(json['Notes']),
        'edge': !exists(json, 'Edge') ? undefined : ((json['Edge'] as Array<any>).map(GisEdgeTypeFromJSON)),
        'trafficMessage': !exists(json, 'TrafficMessage') ? undefined : ((json['TrafficMessage'] as Array<any>).map(TrafficMessageTypeFromJSON)),
        'messages': !exists(json, 'Messages') ? undefined : MessagesFromJSON(json['Messages']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'rType': !exists(json, 'rType') ? undefined : json['rType'],
        'rNum': !exists(json, 'rNum') ? undefined : json['rNum'],
        'man': !exists(json, 'man') ? undefined : json['man'],
        'manTx': !exists(json, 'manTx') ? undefined : json['manTx'],
        'manTargetName': !exists(json, 'manTargetName') ? undefined : json['manTargetName'],
        'dirTx': !exists(json, 'dirTx') ? undefined : json['dirTx'],
        'ori': !exists(json, 'ori') ? undefined : json['ori'],
        'polyS': !exists(json, 'polyS') ? undefined : json['polyS'],
        'polyE': !exists(json, 'polyE') ? undefined : json['polyE'],
        'dist': !exists(json, 'dist') ? undefined : json['dist'],
    };
}

export function GisRouteSegmentToJSON(value?: GisRouteSegment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'durS': value.durS,
        'rtype': value.rtype,
        'rnum': value.rnum,
        'Notes': NotesToJSON(value.notes),
        'Messages': MessagesToJSON(value.messages),
        'name': value.name,
        'rType': value.rType,
        'rNum': value.rNum,
        'man': value.man,
        'manTx': value.manTx,
        'manTargetName': value.manTargetName,
        'dirTx': value.dirTx,
        'ori': value.ori,
        'polyS': value.polyS,
        'polyE': value.polyE,
        'dist': value.dist,
    };
}

