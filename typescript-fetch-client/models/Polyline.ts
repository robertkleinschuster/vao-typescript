/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Polyline
 */
export interface Polyline {
    /**
     * 
     * @type {Array<number>}
     * @memberof Polyline
     */
    readonly crd?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof Polyline
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Polyline
     */
    delta: boolean;
    /**
     * 
     * @type {number}
     * @memberof Polyline
     */
    dim?: number;
    /**
     * 
     * @type {string}
     * @memberof Polyline
     */
    type?: PolylineTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Polyline
     */
    crdEncYX?: string;
    /**
     * 
     * @type {string}
     * @memberof Polyline
     */
    crdEncZ?: string;
    /**
     * 
     * @type {string}
     * @memberof Polyline
     */
    crdEncS?: string;
}


/**
 * @export
 */
export const PolylineTypeEnum = {
    Wgs84: 'WGS84',
    Planar: 'PLANAR',
    Hafasgeo: 'HAFASGEO'
} as const;
export type PolylineTypeEnum = typeof PolylineTypeEnum[keyof typeof PolylineTypeEnum];


/**
 * Check if a given object implements the Polyline interface.
 */
export function instanceOfPolyline(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "delta" in value;

    return isInstance;
}

export function PolylineFromJSON(json: any): Polyline {
    return PolylineFromJSONTyped(json, false);
}

export function PolylineFromJSONTyped(json: any, ignoreDiscriminator: boolean): Polyline {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'crd': !exists(json, 'crd') ? undefined : json['crd'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'delta': json['delta'],
        'dim': !exists(json, 'dim') ? undefined : json['dim'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'crdEncYX': !exists(json, 'crdEncYX') ? undefined : json['crdEncYX'],
        'crdEncZ': !exists(json, 'crdEncZ') ? undefined : json['crdEncZ'],
        'crdEncS': !exists(json, 'crdEncS') ? undefined : json['crdEncS'],
    };
}

export function PolylineToJSON(value?: Polyline | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'delta': value.delta,
        'dim': value.dim,
        'type': value.type,
        'crdEncYX': value.crdEncYX,
        'crdEncZ': value.crdEncZ,
        'crdEncS': value.crdEncS,
    };
}

