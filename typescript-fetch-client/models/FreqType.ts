/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JourneyType } from './JourneyType';
import {
    JourneyTypeFromJSON,
    JourneyTypeFromJSONTyped,
    JourneyTypeToJSON,
} from './JourneyType';

/**
 * 
 * @export
 * @interface FreqType
 */
export interface FreqType {
    /**
     * 
     * @type {Array<JourneyType>}
     * @memberof FreqType
     */
    journey?: Array<JourneyType>;
    /**
     * 
     * @type {number}
     * @memberof FreqType
     */
    waitMinimum?: number;
    /**
     * 
     * @type {number}
     * @memberof FreqType
     */
    waitMaximum?: number;
    /**
     * 
     * @type {number}
     * @memberof FreqType
     */
    alternativeCount?: number;
}

/**
 * Check if a given object implements the FreqType interface.
 */
export function instanceOfFreqType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FreqTypeFromJSON(json: any): FreqType {
    return FreqTypeFromJSONTyped(json, false);
}

export function FreqTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FreqType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'journey': !exists(json, 'journey') ? undefined : ((json['journey'] as Array<any>).map(JourneyTypeFromJSON)),
        'waitMinimum': !exists(json, 'waitMinimum') ? undefined : json['waitMinimum'],
        'waitMaximum': !exists(json, 'waitMaximum') ? undefined : json['waitMaximum'],
        'alternativeCount': !exists(json, 'alternativeCount') ? undefined : json['alternativeCount'],
    };
}

export function FreqTypeToJSON(value?: FreqType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'journey': value.journey === undefined ? undefined : ((value.journey as Array<any>).map(JourneyTypeToJSON)),
        'waitMinimum': value.waitMinimum,
        'waitMaximum': value.waitMaximum,
        'alternativeCount': value.alternativeCount,
    };
}

