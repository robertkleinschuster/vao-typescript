/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JourneyPathItemType } from './JourneyPathItemType';
import {
    JourneyPathItemTypeFromJSON,
    JourneyPathItemTypeFromJSONTyped,
    JourneyPathItemTypeToJSON,
} from './JourneyPathItemType';
import type { PolylineGroup } from './PolylineGroup';
import {
    PolylineGroupFromJSON,
    PolylineGroupFromJSONTyped,
    PolylineGroupToJSON,
} from './PolylineGroup';
import type { StopType } from './StopType';
import {
    StopTypeFromJSON,
    StopTypeFromJSONTyped,
    StopTypeToJSON,
} from './StopType';

/**
 * 
 * @export
 * @interface JourneyPathType
 */
export interface JourneyPathType {
    /**
     * 
     * @type {Array<JourneyPathItemType>}
     * @memberof JourneyPathType
     */
    readonly journeyPathItem: Array<JourneyPathItemType>;
    /**
     * 
     * @type {Array<StopType>}
     * @memberof JourneyPathType
     */
    readonly location?: Array<StopType>;
    /**
     * 
     * @type {PolylineGroup}
     * @memberof JourneyPathType
     */
    polylineGroup?: PolylineGroup;
}

/**
 * Check if a given object implements the JourneyPathType interface.
 */
export function instanceOfJourneyPathType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "journeyPathItem" in value;

    return isInstance;
}

export function JourneyPathTypeFromJSON(json: any): JourneyPathType {
    return JourneyPathTypeFromJSONTyped(json, false);
}

export function JourneyPathTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): JourneyPathType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'journeyPathItem': ((json['JourneyPathItem'] as Array<any>).map(JourneyPathItemTypeFromJSON)),
        'location': !exists(json, 'Location') ? undefined : ((json['Location'] as Array<any>).map(StopTypeFromJSON)),
        'polylineGroup': !exists(json, 'PolylineGroup') ? undefined : PolylineGroupFromJSON(json['PolylineGroup']),
    };
}

export function JourneyPathTypeToJSON(value?: JourneyPathType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'PolylineGroup': PolylineGroupToJSON(value.polylineGroup),
    };
}

