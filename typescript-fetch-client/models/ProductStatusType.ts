/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IconType } from './IconType';
import {
    IconTypeFromJSON,
    IconTypeFromJSONTyped,
    IconTypeToJSON,
} from './IconType';

/**
 * 
 * @export
 * @interface ProductStatusType
 */
export interface ProductStatusType {
    /**
     * 
     * @type {IconType}
     * @memberof ProductStatusType
     */
    icon?: IconType;
    /**
     * 
     * @type {IconType}
     * @memberof ProductStatusType
     */
    rtIcon?: IconType;
    /**
     * 
     * @type {number}
     * @memberof ProductStatusType
     */
    code?: number;
    /**
     * 
     * @type {string}
     * @memberof ProductStatusType
     */
    txt?: string;
}

/**
 * Check if a given object implements the ProductStatusType interface.
 */
export function instanceOfProductStatusType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductStatusTypeFromJSON(json: any): ProductStatusType {
    return ProductStatusTypeFromJSONTyped(json, false);
}

export function ProductStatusTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductStatusType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'icon': !exists(json, 'icon') ? undefined : IconTypeFromJSON(json['icon']),
        'rtIcon': !exists(json, 'rtIcon') ? undefined : IconTypeFromJSON(json['rtIcon']),
        'code': !exists(json, 'code') ? undefined : json['code'],
        'txt': !exists(json, 'txt') ? undefined : json['txt'],
    };
}

export function ProductStatusTypeToJSON(value?: ProductStatusType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'icon': IconTypeToJSON(value.icon),
        'rtIcon': IconTypeToJSON(value.rtIcon),
        'code': value.code,
        'txt': value.txt,
    };
}

