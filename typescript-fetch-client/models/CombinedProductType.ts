/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductType } from './ProductType';
import {
    ProductTypeFromJSON,
    ProductTypeFromJSONTyped,
    ProductTypeToJSON,
} from './ProductType';

/**
 * 
 * @export
 * @interface CombinedProductType
 */
export interface CombinedProductType {
    /**
     * 
     * @type {Array<ProductType>}
     * @memberof CombinedProductType
     */
    readonly product: Array<ProductType>;
}

/**
 * Check if a given object implements the CombinedProductType interface.
 */
export function instanceOfCombinedProductType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "product" in value;

    return isInstance;
}

export function CombinedProductTypeFromJSON(json: any): CombinedProductType {
    return CombinedProductTypeFromJSONTyped(json, false);
}

export function CombinedProductTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CombinedProductType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'product': ((json['Product'] as Array<any>).map(ProductTypeFromJSON)),
    };
}

export function CombinedProductTypeToJSON(value?: CombinedProductType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

