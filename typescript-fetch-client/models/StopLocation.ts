/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoordLocation } from './CoordLocation';
import {
    CoordLocationFromJSON,
    CoordLocationFromJSONTyped,
    CoordLocationToJSON,
} from './CoordLocation';
import type { LocationNotes } from './LocationNotes';
import {
    LocationNotesFromJSON,
    LocationNotesFromJSONTyped,
    LocationNotesToJSON,
} from './LocationNotes';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';
import type { ProductType } from './ProductType';
import {
    ProductTypeFromJSON,
    ProductTypeFromJSONTyped,
    ProductTypeToJSON,
} from './ProductType';
import type { ResourceLinks } from './ResourceLinks';
import {
    ResourceLinksFromJSON,
    ResourceLinksFromJSONTyped,
    ResourceLinksToJSON,
} from './ResourceLinks';
import type { TariffResult } from './TariffResult';
import {
    TariffResultFromJSON,
    TariffResultFromJSONTyped,
    TariffResultToJSON,
} from './TariffResult';
import type { WeatherInformationType } from './WeatherInformationType';
import {
    WeatherInformationTypeFromJSON,
    WeatherInformationTypeFromJSONTyped,
    WeatherInformationTypeToJSON,
} from './WeatherInformationType';

/**
 * 
 * @export
 * @interface StopLocation
 */
export interface StopLocation {
    /**
     * 
     * @type {LocationNotes}
     * @memberof StopLocation
     */
    locationNotes?: LocationNotes;
    /**
     * 
     * @type {Array<Message>}
     * @memberof StopLocation
     */
    message?: Array<Message>;
    /**
     * 
     * @type {Array<ProductType>}
     * @memberof StopLocation
     */
    productAtStop?: Array<ProductType>;
    /**
     * 
     * @type {TariffResult}
     * @memberof StopLocation
     */
    tariffResult?: TariffResult;
    /**
     * 
     * @type {Array<ResourceLinks>}
     * @memberof StopLocation
     */
    links?: Array<ResourceLinks>;
    /**
     * 
     * @type {Array<string>}
     * @memberof StopLocation
     */
    altId?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof StopLocation
     */
    mainMastAltId?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    timezoneOffset?: number;
    /**
     * 
     * @type {StopLocation}
     * @memberof StopLocation
     */
    mainMast?: StopLocation;
    /**
     * 
     * @type {Array<StopLocation>}
     * @memberof StopLocation
     */
    equivalentStopLocation?: Array<StopLocation>;
    /**
     * 
     * @type {Array<StopLocation>}
     * @memberof StopLocation
     */
    entryPointLocation?: Array<StopLocation>;
    /**
     * 
     * @type {Array<WeatherInformationType>}
     * @memberof StopLocation
     */
    weatherInformation?: Array<WeatherInformationType>;
    /**
     * 
     * @type {Array<CoordLocation>}
     * @memberof StopLocation
     */
    assignedPois?: Array<CoordLocation>;
    /**
     * 
     * @type {string}
     * @memberof StopLocation
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof StopLocation
     */
    extId: string;
    /**
     * 
     * @type {boolean}
     * @memberof StopLocation
     */
    isMainMast?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof StopLocation
     */
    hasMainMast?: boolean;
    /**
     * 
     * @type {string}
     * @memberof StopLocation
     */
    mainMastId?: string;
    /**
     * 
     * @type {string}
     * @memberof StopLocation
     */
    mainMastExtId?: string;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    mainMastLon?: number;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    mainMastLat?: number;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    mainMastAlt?: number;
    /**
     * 
     * @type {string}
     * @memberof StopLocation
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof StopLocation
     */
    defName?: string;
    /**
     * 
     * @type {string}
     * @memberof StopLocation
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    lon?: number;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    lat?: number;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    alt?: number;
    /**
     * 
     * @type {string}
     * @memberof StopLocation
     */
    track?: string;
    /**
     * 
     * @type {boolean}
     * @memberof StopLocation
     */
    trackHidden?: boolean;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    weight?: number;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    dist?: number;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    products?: number;
    /**
     * 
     * @type {boolean}
     * @memberof StopLocation
     */
    meta?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof StopLocation
     */
    refinable?: boolean;
    /**
     * 
     * @type {number}
     * @memberof StopLocation
     */
    matchValue?: number;
    /**
     * 
     * @type {boolean}
     * @memberof StopLocation
     */
    entry?: boolean;
}

/**
 * Check if a given object implements the StopLocation interface.
 */
export function instanceOfStopLocation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "extId" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function StopLocationFromJSON(json: any): StopLocation {
    return StopLocationFromJSONTyped(json, false);
}

export function StopLocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): StopLocation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'locationNotes': !exists(json, 'LocationNotes') ? undefined : LocationNotesFromJSON(json['LocationNotes']),
        'message': !exists(json, 'Message') ? undefined : ((json['Message'] as Array<any>).map(MessageFromJSON)),
        'productAtStop': !exists(json, 'productAtStop') ? undefined : ((json['productAtStop'] as Array<any>).map(ProductTypeFromJSON)),
        'tariffResult': !exists(json, 'TariffResult') ? undefined : TariffResultFromJSON(json['TariffResult']),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(ResourceLinksFromJSON)),
        'altId': !exists(json, 'altId') ? undefined : json['altId'],
        'mainMastAltId': !exists(json, 'mainMastAltId') ? undefined : json['mainMastAltId'],
        'timezoneOffset': !exists(json, 'timezoneOffset') ? undefined : json['timezoneOffset'],
        'mainMast': !exists(json, 'mainMast') ? undefined : StopLocationFromJSON(json['mainMast']),
        'equivalentStopLocation': !exists(json, 'equivalentStopLocation') ? undefined : ((json['equivalentStopLocation'] as Array<any>).map(StopLocationFromJSON)),
        'entryPointLocation': !exists(json, 'entryPointLocation') ? undefined : ((json['entryPointLocation'] as Array<any>).map(StopLocationFromJSON)),
        'weatherInformation': !exists(json, 'weatherInformation') ? undefined : ((json['weatherInformation'] as Array<any>).map(WeatherInformationTypeFromJSON)),
        'assignedPois': !exists(json, 'assignedPois') ? undefined : ((json['assignedPois'] as Array<any>).map(CoordLocationFromJSON)),
        'id': json['id'],
        'extId': json['extId'],
        'isMainMast': !exists(json, 'isMainMast') ? undefined : json['isMainMast'],
        'hasMainMast': !exists(json, 'hasMainMast') ? undefined : json['hasMainMast'],
        'mainMastId': !exists(json, 'mainMastId') ? undefined : json['mainMastId'],
        'mainMastExtId': !exists(json, 'mainMastExtId') ? undefined : json['mainMastExtId'],
        'mainMastLon': !exists(json, 'mainMastLon') ? undefined : json['mainMastLon'],
        'mainMastLat': !exists(json, 'mainMastLat') ? undefined : json['mainMastLat'],
        'mainMastAlt': !exists(json, 'mainMastAlt') ? undefined : json['mainMastAlt'],
        'name': json['name'],
        'defName': !exists(json, 'defName') ? undefined : json['defName'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'lon': !exists(json, 'lon') ? undefined : json['lon'],
        'lat': !exists(json, 'lat') ? undefined : json['lat'],
        'alt': !exists(json, 'alt') ? undefined : json['alt'],
        'track': !exists(json, 'track') ? undefined : json['track'],
        'trackHidden': !exists(json, 'trackHidden') ? undefined : json['trackHidden'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
        'dist': !exists(json, 'dist') ? undefined : json['dist'],
        'products': !exists(json, 'products') ? undefined : json['products'],
        'meta': !exists(json, 'meta') ? undefined : json['meta'],
        'refinable': !exists(json, 'refinable') ? undefined : json['refinable'],
        'matchValue': !exists(json, 'matchValue') ? undefined : json['matchValue'],
        'entry': !exists(json, 'entry') ? undefined : json['entry'],
    };
}

export function StopLocationToJSON(value?: StopLocation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'LocationNotes': LocationNotesToJSON(value.locationNotes),
        'Message': value.message === undefined ? undefined : ((value.message as Array<any>).map(MessageToJSON)),
        'productAtStop': value.productAtStop === undefined ? undefined : ((value.productAtStop as Array<any>).map(ProductTypeToJSON)),
        'TariffResult': TariffResultToJSON(value.tariffResult),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(ResourceLinksToJSON)),
        'altId': value.altId,
        'mainMastAltId': value.mainMastAltId,
        'timezoneOffset': value.timezoneOffset,
        'mainMast': StopLocationToJSON(value.mainMast),
        'equivalentStopLocation': value.equivalentStopLocation === undefined ? undefined : ((value.equivalentStopLocation as Array<any>).map(StopLocationToJSON)),
        'entryPointLocation': value.entryPointLocation === undefined ? undefined : ((value.entryPointLocation as Array<any>).map(StopLocationToJSON)),
        'weatherInformation': value.weatherInformation === undefined ? undefined : ((value.weatherInformation as Array<any>).map(WeatherInformationTypeToJSON)),
        'assignedPois': value.assignedPois === undefined ? undefined : ((value.assignedPois as Array<any>).map(CoordLocationToJSON)),
        'id': value.id,
        'extId': value.extId,
        'isMainMast': value.isMainMast,
        'hasMainMast': value.hasMainMast,
        'mainMastId': value.mainMastId,
        'mainMastExtId': value.mainMastExtId,
        'mainMastLon': value.mainMastLon,
        'mainMastLat': value.mainMastLat,
        'mainMastAlt': value.mainMastAlt,
        'name': value.name,
        'defName': value.defName,
        'description': value.description,
        'lon': value.lon,
        'lat': value.lat,
        'alt': value.alt,
        'track': value.track,
        'trackHidden': value.trackHidden,
        'weight': value.weight,
        'dist': value.dist,
        'products': value.products,
        'meta': value.meta,
        'refinable': value.refinable,
        'matchValue': value.matchValue,
        'entry': value.entry,
    };
}

