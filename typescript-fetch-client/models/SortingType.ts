/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SortingGroupType } from './SortingGroupType';
import {
    SortingGroupTypeFromJSON,
    SortingGroupTypeFromJSONTyped,
    SortingGroupTypeToJSON,
} from './SortingGroupType';

/**
 * 
 * @export
 * @interface SortingType
 */
export interface SortingType {
    /**
     * 
     * @type {Array<SortingGroupType>}
     * @memberof SortingType
     */
    readonly sortingGroup?: Array<SortingGroupType>;
    /**
     * 
     * @type {string}
     * @memberof SortingType
     */
    initialSortingType?: SortingTypeInitialSortingTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof SortingType
     */
    scrollable?: boolean;
}


/**
 * @export
 */
export const SortingTypeInitialSortingTypeEnum = {
    Ti: 'TI',
    Co: 'CO',
    Cf: 'CF',
    Ut: 'UT',
    Dt: 'DT',
    At: 'AT',
    Pt: 'PT',
    Co2: 'CO2',
    Oc: 'OC',
    Cal: 'CAL'
} as const;
export type SortingTypeInitialSortingTypeEnum = typeof SortingTypeInitialSortingTypeEnum[keyof typeof SortingTypeInitialSortingTypeEnum];


/**
 * Check if a given object implements the SortingType interface.
 */
export function instanceOfSortingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SortingTypeFromJSON(json: any): SortingType {
    return SortingTypeFromJSONTyped(json, false);
}

export function SortingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SortingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sortingGroup': !exists(json, 'SortingGroup') ? undefined : ((json['SortingGroup'] as Array<any>).map(SortingGroupTypeFromJSON)),
        'initialSortingType': !exists(json, 'initialSortingType') ? undefined : json['initialSortingType'],
        'scrollable': !exists(json, 'scrollable') ? undefined : json['scrollable'],
    };
}

export function SortingTypeToJSON(value?: SortingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'initialSortingType': value.initialSortingType,
        'scrollable': value.scrollable,
    };
}

