/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UrlLinkType } from './UrlLinkType';
import {
    UrlLinkTypeFromJSON,
    UrlLinkTypeFromJSONTyped,
    UrlLinkTypeToJSON,
} from './UrlLinkType';

/**
 * 
 * @export
 * @interface MessageChannelType
 */
export interface MessageChannelType {
    /**
     * 
     * @type {string}
     * @memberof MessageChannelType
     */
    name?: string;
    /**
     * 
     * @type {Array<UrlLinkType>}
     * @memberof MessageChannelType
     */
    readonly url?: Array<UrlLinkType>;
    /**
     * 
     * @type {string}
     * @memberof MessageChannelType
     */
    validFromTime?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageChannelType
     */
    validFromDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageChannelType
     */
    validToTime?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageChannelType
     */
    validToDate?: string;
}

/**
 * Check if a given object implements the MessageChannelType interface.
 */
export function instanceOfMessageChannelType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MessageChannelTypeFromJSON(json: any): MessageChannelType {
    return MessageChannelTypeFromJSONTyped(json, false);
}

export function MessageChannelTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageChannelType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'url': !exists(json, 'url') ? undefined : ((json['url'] as Array<any>).map(UrlLinkTypeFromJSON)),
        'validFromTime': !exists(json, 'validFromTime') ? undefined : json['validFromTime'],
        'validFromDate': !exists(json, 'validFromDate') ? undefined : json['validFromDate'],
        'validToTime': !exists(json, 'validToTime') ? undefined : json['validToTime'],
        'validToDate': !exists(json, 'validToDate') ? undefined : json['validToDate'],
    };
}

export function MessageChannelTypeToJSON(value?: MessageChannelType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'validFromTime': value.validFromTime,
        'validFromDate': value.validFromDate,
        'validToTime': value.validToTime,
        'validToDate': value.validToDate,
    };
}

