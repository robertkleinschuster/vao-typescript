/* tslint:disable */
/* eslint-disable */
/**
 * Proxy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ArrivalBoard,
} from '../models/index';
import {
    ArrivalBoardFromJSON,
    ArrivalBoardToJSON,
} from '../models/index';

export interface Verb5Request {
    type: Verb5TypeEnum;
    requestId?: string;
    format?: Verb5FormatEnum;
    jsonpCallback?: string;
    lang?: string;
    id?: string;
    extId?: string;
    direction?: string;
    date?: string;
    time?: string;
    duration?: number;
    maxJourneys?: number;
    products?: number;
    operators?: string;
    categories?: string;
    lines?: string;
    attributes?: string;
    platforms?: string;
    passlist?: Verb5PasslistEnum;
    passlistMaxStops?: number;
    minDur?: number;
    baim?: Verb5BaimEnum;
    rtMode?: Verb5RtModeEnum;
}

/**
 * 
 */
export class ArrivalBoardApi extends runtime.BaseAPI {

    /**
     * Arrival board
     */
    async verb5Raw(requestParameters: Verb5Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ArrivalBoard>> {
        if (requestParameters.type === null || requestParameters.type === undefined) {
            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling verb5.');
        }

        const queryParameters: any = {};

        if (requestParameters.requestId !== undefined) {
            queryParameters['requestId'] = requestParameters.requestId;
        }

        if (requestParameters.format !== undefined) {
            queryParameters['format'] = requestParameters.format;
        }

        if (requestParameters.jsonpCallback !== undefined) {
            queryParameters['jsonpCallback'] = requestParameters.jsonpCallback;
        }

        if (requestParameters.lang !== undefined) {
            queryParameters['lang'] = requestParameters.lang;
        }

        if (requestParameters.id !== undefined) {
            queryParameters['id'] = requestParameters.id;
        }

        if (requestParameters.extId !== undefined) {
            queryParameters['extId'] = requestParameters.extId;
        }

        if (requestParameters.direction !== undefined) {
            queryParameters['direction'] = requestParameters.direction;
        }

        if (requestParameters.date !== undefined) {
            queryParameters['date'] = requestParameters.date;
        }

        if (requestParameters.time !== undefined) {
            queryParameters['time'] = requestParameters.time;
        }

        if (requestParameters.duration !== undefined) {
            queryParameters['duration'] = requestParameters.duration;
        }

        if (requestParameters.maxJourneys !== undefined) {
            queryParameters['maxJourneys'] = requestParameters.maxJourneys;
        }

        if (requestParameters.products !== undefined) {
            queryParameters['products'] = requestParameters.products;
        }

        if (requestParameters.operators !== undefined) {
            queryParameters['operators'] = requestParameters.operators;
        }

        if (requestParameters.categories !== undefined) {
            queryParameters['categories'] = requestParameters.categories;
        }

        if (requestParameters.lines !== undefined) {
            queryParameters['lines'] = requestParameters.lines;
        }

        if (requestParameters.attributes !== undefined) {
            queryParameters['attributes'] = requestParameters.attributes;
        }

        if (requestParameters.platforms !== undefined) {
            queryParameters['platforms'] = requestParameters.platforms;
        }

        if (requestParameters.passlist !== undefined) {
            queryParameters['passlist'] = requestParameters.passlist;
        }

        if (requestParameters.passlistMaxStops !== undefined) {
            queryParameters['passlistMaxStops'] = requestParameters.passlistMaxStops;
        }

        if (requestParameters.minDur !== undefined) {
            queryParameters['minDur'] = requestParameters.minDur;
        }

        if (requestParameters.baim !== undefined) {
            queryParameters['baim'] = requestParameters.baim;
        }

        if (requestParameters.rtMode !== undefined) {
            queryParameters['rtMode'] = requestParameters.rtMode;
        }

        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["accessId"] = this.configuration.apiKey("accessId"); // accessId authentication
        }

        const response = await this.request({
            path: `/arrivalBoard`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ArrivalBoardFromJSON(jsonValue));
    }

    /**
     * Arrival board
     */
    async verb5(requestParameters: Verb5Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ArrivalBoard> {
        const response = await this.verb5Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const Verb5TypeEnum = {
    Arr: 'ARR',
    ArrEquivs: 'ARR_EQUIVS',
    ArrMast: 'ARR_MAST',
    ArrStation: 'ARR_STATION'
} as const;
export type Verb5TypeEnum = typeof Verb5TypeEnum[keyof typeof Verb5TypeEnum];
/**
 * @export
 */
export const Verb5FormatEnum = {
    Xml: 'xml',
    Json: 'json',
    Jsonp: 'jsonp'
} as const;
export type Verb5FormatEnum = typeof Verb5FormatEnum[keyof typeof Verb5FormatEnum];
/**
 * @export
 */
export const Verb5PasslistEnum = {
    _0: '0',
    _1: '1'
} as const;
export type Verb5PasslistEnum = typeof Verb5PasslistEnum[keyof typeof Verb5PasslistEnum];
/**
 * @export
 */
export const Verb5BaimEnum = {
    _0: '0',
    _1: '1'
} as const;
export type Verb5BaimEnum = typeof Verb5BaimEnum[keyof typeof Verb5BaimEnum];
/**
 * @export
 */
export const Verb5RtModeEnum = {
    Off: 'OFF',
    ServerDefault: 'SERVER_DEFAULT'
} as const;
export type Verb5RtModeEnum = typeof Verb5RtModeEnum[keyof typeof Verb5RtModeEnum];
